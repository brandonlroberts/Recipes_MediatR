@page "/editrecipe/{Id:int}"
@using static Recipes_MediatR.Pages.Recipes.EditRecipePage.GetRecipeCoreDataHandler;
@using static Recipes_MediatR.Pages.Recipes.EditRecipePage.EditRecipeCoreDataHandler;
@inject IMediator MediatR;
@inject NavigationManager NavigationManager;
@inject ISnackbar Snackbar

<MudForm @ref="@_mudform" Model="@_recipe" Validation="@(_validator.ValidateValue)" ValidationDelay="0">
    <div style="display:flex; flex-direction:column; width:300px; margin:50px 30px 100px 50px;">
        <MudTextField Class="mb-5" Label="Title" Immediate="true" For="() => _recipe.Title" @bind-Value="_recipe.Title" />
        <MudTextField Class="mb-5" Label="Created By" Immediate="true" For="() => _recipe.CreatedBy" @bind-Value="_recipe.CreatedBy" />
        <MudDatePicker Class="mb-5" Label="Created Date" For="() => _recipe.CreatedDate" @bind-Date="_recipe.CreatedDate" />
        <MudButton Style="width:75px; margin-top:20px;" OnClick="@UpdateRecipeCoreData" Variant="Variant.Filled" 
            StartIcon="@Icons.Material.Filled.Save" Color="Color.Info" Size="Size.Small">Save</MudButton>
    </div>
</MudForm>

@code {
    [Parameter] public int Id { get; set; }
    MudForm _mudform = new();
    GetRecipeCoreData.Response _recipe = new();
    EditRecipeCoreDataValidator _validator = new();

    protected async override Task OnInitializedAsync()
    {
        try
        {
            _recipe = await MediatR.Send(new GetRecipeCoreData.Request(Id));
        }
        catch (HttpRequestException ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }

    protected async void UpdateRecipeCoreData()
    {
        try
        {
            await _mudform.Validate();
            if (_mudform.IsValid)
            {
                await MediatR.Send(new EditRecipeCoreData.Request(_recipe.Id, _recipe.Title, _recipe.CreatedDate, _recipe.CreatedBy));
                NavigationManager.NavigateTo("/");
            }
        }
        catch (HttpRequestException ex)
        {
            throw ex;
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
}